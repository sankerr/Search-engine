# gui class
# That class create the gui for this app
import os
import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    gui_support.init(root, top)
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")
    root.iconbitmap(os.path.join(base_path, "Resources/icon.ico"))
    root.resizable(False,False)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None
    sys.exit(0)


# create the main window of the app
class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Segoe UI} -size 20 -weight bold -slant "  \
            "italic -underline 0 -overstrike 0"
        font11 = "-family {Segoe UI} -size 14 -weight bold -slant " \
                 "italic -underline 0 -overstrike 0"
        font12 = "-family {Segoe UI} -size 10 -weight bold -slant " \
                 "italic -underline 0 -overstrike 0"

        top.geometry("600x450+423+141")
        top.title("Search&find")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")


        self.insert_btn = tk.Button(top)
        self.insert_btn.place(relx=0.083, rely=0.530, height=24, width=80)
        self.insert_btn.configure(activebackground="#ececec")
        self.insert_btn.configure(activeforeground="#000000")
        self.insert_btn.configure(background="#d9d9d9")
        self.insert_btn.configure(disabledforeground="#a3a3a3")
        self.insert_btn.configure(foreground="#000000")
        self.insert_btn.configure(highlightbackground="#d9d9d9")
        self.insert_btn.configure(highlightcolor="black")
        self.insert_btn.configure(pady="0")
        self.insert_btn.configure(text='''Build Engine''')
        self.insert_btn.bind('<Button-1>',lambda e:gui_support.insertButton())

        self.resert_btn = tk.Button(top)
        self.resert_btn.place(relx=0.083, rely=0.8000, height=24, width=39)
        self.resert_btn.configure(activebackground="#ececec")
        self.resert_btn.configure(activeforeground="#000000")
        self.resert_btn.configure(background="#d9d9d9")
        self.resert_btn.configure(disabledforeground="#a3a3a3")
        self.resert_btn.configure(foreground="#000000")
        self.resert_btn.configure(highlightbackground="#d9d9d9")
        self.resert_btn.configure(highlightcolor="black")
        self.resert_btn.configure(pady="0")
        self.resert_btn.configure(text='''Reset''')
        self.resert_btn.bind('<Button-1>',lambda e:gui_support.resetButton())

        self.show_btn = tk.Button(top)
        self.show_btn.place(relx=0.083, rely=0.710, height=24, width=96)
        self.show_btn.configure(activebackground="#ececec")
        self.show_btn.configure(activeforeground="#000000")
        self.show_btn.configure(background="#d9d9d9")
        self.show_btn.configure(disabledforeground="#a3a3a3")
        self.show_btn.configure(foreground="#000000")
        self.show_btn.configure(highlightbackground="#d9d9d9")
        self.show_btn.configure(highlightcolor="black")
        self.show_btn.configure(pady="0")
        self.show_btn.configure(text='''Show dictionary''')
        self.show_btn.bind('<Button-1>',lambda e:gui_support.showButton())

        self.upload_btn = tk.Button(top)
        self.upload_btn.place(relx=0.083, rely=0.620, height=24, width=105)
        self.upload_btn.configure(activebackground="#ececec")
        self.upload_btn.configure(activeforeground="#000000")
        self.upload_btn.configure(background="#d9d9d9")
        self.upload_btn.configure(disabledforeground="#a3a3a3")
        self.upload_btn.configure(foreground="#000000")
        self.upload_btn.configure(highlightbackground="#d9d9d9")
        self.upload_btn.configure(highlightcolor="black")
        self.upload_btn.configure(pady="0")
        self.upload_btn.configure(text='''Upload dictionary''')
        self.upload_btn.bind('<Button-1>',lambda e:gui_support.uploadButton())

        self.stem_cbox = tk.Checkbutton(top)
        self.stem_cbox.place(relx=0.35, rely=0.430, relheight=0.056, relwidth=0.138)
        self.stem_cbox.configure(activebackground="#ececec")
        self.stem_cbox.configure(activeforeground="#000000")
        self.stem_cbox.configure(background="#d9d9d9")
        self.stem_cbox.configure(disabledforeground="#a3a3a3")
        self.stem_cbox.configure(foreground="#000000")
        self.stem_cbox.configure(highlightbackground="#d9d9d9")
        self.stem_cbox.configure(highlightcolor="black")
        self.stem_cbox.configure(justify='left')
        self.stem_cbox.configure(state='normal')
        self.stem_cbox.configure(text='''Stemming''')
        self.stem_cbox.configure(underline="0")
        self.stem_cbox.configure(variable=tk.IntVar())
        self.stem_cbox.bind('<Button-1>',lambda e:gui_support.stemCbox())

        self.semantic_cbox = tk.Checkbutton(top)
        self.semantic_cbox.place(relx=0.5, rely=0.430, relheight=0.056, relwidth=0.138)
        self.semantic_cbox.configure(activebackground="#ececec")
        self.semantic_cbox.configure(activeforeground="#000000")
        self.semantic_cbox.configure(background="#d9d9d9")
        self.semantic_cbox.configure(disabledforeground="#a3a3a3")
        self.semantic_cbox.configure(foreground="#000000")
        self.semantic_cbox.configure(highlightbackground="#d9d9d9")
        self.semantic_cbox.configure(highlightcolor="black")
        self.semantic_cbox.configure(justify='left')
        self.semantic_cbox.configure(state='normal')
        self.semantic_cbox.configure(text='''Semantic''')
        self.semantic_cbox.configure(underline="0")
        self.semantic_cbox.configure(variable=tk.IntVar())
        self.semantic_cbox.bind('<Button-1>', lambda e: gui_support.semanticCbox())

        self.string_var_language = tk.StringVar()
        self.string_var_language.set("Select a language")
        self.Listbox1 = tk.OptionMenu(top, self.string_var_language, *["Select a language"])
        self.Listbox1.place(relx=0.35, rely=0.556, relheight=0.05, relwidth=0.3)
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(disabledforeground="#a3a3a3")
        self.Listbox1.configure(font="TkFixedFont")
        self.Listbox1.configure(foreground="#000000")
        self.Listbox1.configure(highlightbackground="#d9d9d9")
        self.Listbox1.configure(highlightcolor="black")
        self.Listbox1.configure(width=10)

        self.string_var_city = tk.StringVar()
        self.string_var_city.set("Select a city")
        self.Listbox2 = tk.OptionMenu(top, self.string_var_city, *["Select a city"])
        self.Listbox2.place(relx=0.68, rely=0.556, relheight=0.05, relwidth=0.25)
        self.Listbox2.configure(background="white")
        self.Listbox2.configure(disabledforeground="#a3a3a3")
        self.Listbox2.configure(font="TkFixedFont")
        self.Listbox2.configure(foreground="#000000")
        self.Listbox2.configure(highlightbackground="#d9d9d9")
        self.Listbox2.configure(highlightcolor="black")
        self.Listbox2.configure(width=10)

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.05, rely=0.171, height=21, width=120)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Insert corpus path''')
        self.Label2.configure(font=font12)

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.05, rely=0.241, height=21, width=150)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Insert path to save files''')
        self.Label3.configure(font=font12)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.05, rely=0.311, height=21, width=120)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Insert queries path''')
        self.Label4.configure(font=font12)

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.05, rely=0.381, height=21, width=110)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Insert query''')
        self.Label5.configure(font=font12)

        self.corpus_btn = tk.Button(top)
        self.corpus_btn.place(relx=0.74, rely=0.171, height=20, width=49)
        self.corpus_btn.configure(activebackground="#ececec")
        self.corpus_btn.configure(activeforeground="#000000")
        self.corpus_btn.configure(background="#d9d9d9")
        self.corpus_btn.configure(disabledforeground="#a3a3a3")
        self.corpus_btn.configure(foreground="#000000")
        self.corpus_btn.configure(highlightbackground="#d9d9d9")
        self.corpus_btn.configure(highlightcolor="black")
        self.corpus_btn.configure(pady="0")
        self.corpus_btn.configure(text='''Browse''')
        self.corpus_btn.bind('<Button-1>',lambda e:gui_support.browseCorpuse())

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.74, rely=0.241, height=20, width=49)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Browse''')
        self.Button2.bind('<Button-1>',lambda e:gui_support.browseDestination())

        self.queries_path_btn = tk.Button(top)
        self.queries_path_btn.place(relx=0.74, rely=0.311, height=20, width=49)
        self.queries_path_btn.configure(activebackground="#ececec")
        self.queries_path_btn.configure(activeforeground="#000000")
        self.queries_path_btn.configure(background="#d9d9d9")
        self.queries_path_btn.configure(disabledforeground="#a3a3a3")
        self.queries_path_btn.configure(foreground="#000000")
        self.queries_path_btn.configure(highlightbackground="#d9d9d9")
        self.queries_path_btn.configure(highlightcolor="black")
        self.queries_path_btn.configure(pady="0")
        self.queries_path_btn.configure(state="normal")
        self.queries_path_btn.configure(text='''Browse''')
        self.queries_path_btn.configure(command=gui_support.browse_queries)

        self.queries_run_btn = tk.Button(top)
        self.queries_run_btn.place(relx=0.84, rely=0.311, height=20, width=75)
        self.queries_run_btn.configure(activebackground="#ececec")
        self.queries_run_btn.configure(activeforeground="#000000")
        self.queries_run_btn.configure(background="#d9d9d9")
        self.queries_run_btn.configure(disabledforeground="#a3a3a3")
        self.queries_run_btn.configure(foreground="#000000")
        self.queries_run_btn.configure(highlightbackground="#d9d9d9")
        self.queries_run_btn.configure(highlightcolor="black")
        self.queries_run_btn.configure(pady="0")
        self.queries_run_btn.configure(state="normal")
        self.queries_run_btn.configure(text='''Run queries!''')
        self.queries_run_btn.configure(command=gui_support.run_query_file)

        self.query_btn = tk.Button(top)
        self.query_btn.place(relx=0.74, rely=0.381, height=20, width=49)
        self.query_btn.configure(activebackground="#ececec")
        self.query_btn.configure(activeforeground="#000000")
        self.query_btn.configure(background="#d9d9d9")
        self.query_btn.configure(disabledforeground="#a3a3a3")
        self.query_btn.configure(foreground="#000000")
        self.query_btn.configure(highlightbackground="#d9d9d9")
        self.query_btn.configure(highlightcolor="black")
        self.query_btn.configure(pady="0")
        self.query_btn.configure(text='''Run!''')
        self.query_btn.configure(command=gui_support.run_query)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.41, rely=0.511, height=21, width=110)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Choose language''')
        self.Label4.configure(font=font12)

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.71, rely=0.511, height=21, width=98)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Choose city''')
        self.Label6.configure(font=font12)

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.3, rely=0.037, height=51, width=224)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font=font10)
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#501fef")
        self.Label5.configure(highlightcolor="#1f1863")
        self.Label5.configure(text='''Search & Find''')

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.33, rely=0.171, height=20, relwidth=0.4)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(width=184)
        self.Entry1.configure(x=tk.StringVar())

        self.Entry2 = tk.Entry(top)
        self.Entry2.place(relx=0.33, rely=0.241, height=20, relwidth=0.4)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(width=184)

        self.Entry3 = tk.Entry(top)
        self.Entry3.place(relx=0.33, rely=0.311, height=20, relwidth=0.4)
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(width=184)

        self.Entry4 = tk.Entry(top)
        self.Entry4.place(relx=0.33, rely=0.381, height=20, relwidth=0.4)
        self.Entry4.configure(background="white")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(width=184)

        self.add_language_choice = tk.Button(top)
        self.add_language_choice.place(relx=0.42, rely=0.62, height=40, width=100)
        self.add_language_choice.configure(activebackground="#ececec")
        self.add_language_choice.configure(activeforeground="#000000")
        self.add_language_choice.configure(background="#d9d9d9")
        self.add_language_choice.configure(disabledforeground="#a3a3a3")
        self.add_language_choice.configure(foreground="#000000")
        self.add_language_choice.configure(highlightbackground="#d9d9d9")
        self.add_language_choice.configure(highlightcolor="black")
        self.add_language_choice.configure(pady="0")
        self.add_language_choice.configure(text='Add' + "\n" + 'language choice')
        self.add_language_choice.bind('<Button-1>', lambda e: gui_support.add_language())

        self.add_city_choice = tk.Button(top)
        self.add_city_choice.place(relx=0.73, rely=0.62, height=40, width=90)
        self.add_city_choice.configure(activebackground="#ececec")
        self.add_city_choice.configure(activeforeground="#000000")
        self.add_city_choice.configure(background="#d9d9d9")
        self.add_city_choice.configure(disabledforeground="#a3a3a3")
        self.add_city_choice.configure(foreground="#000000")
        self.add_city_choice.configure(highlightbackground="#d9d9d9")
        self.add_city_choice.configure(highlightcolor="black")
        self.add_city_choice.configure(pady="0")
        self.add_city_choice.configure(text='Add' + "\n" + 'city choice')
        self.add_city_choice.bind('<Button-1>', lambda e: gui_support.add_city())

        self.reset_language_choice = tk.Button(top)
        self.reset_language_choice.place(relx=0.42, rely=0.73, height=40, width=100)
        self.reset_language_choice.configure(activebackground="#ececec")
        self.reset_language_choice.configure(activeforeground="#000000")
        self.reset_language_choice.configure(background="#d9d9d9")
        self.reset_language_choice.configure(disabledforeground="#a3a3a3")
        self.reset_language_choice.configure(foreground="#000000")
        self.reset_language_choice.configure(highlightbackground="#d9d9d9")
        self.reset_language_choice.configure(highlightcolor="black")
        self.reset_language_choice.configure(pady="0")
        self.reset_language_choice.configure(text='Reset' + "\n" + 'language choice')
        self.reset_language_choice.bind('<Button-1>', lambda e: gui_support.reset_language())

        self.reset_city_choice = tk.Button(top)
        self.reset_city_choice.place(relx=0.73, rely=0.73, height=40, width=90)
        self.reset_city_choice.configure(activebackground="#ececec")
        self.reset_city_choice.configure(activeforeground="#000000")
        self.reset_city_choice.configure(background="#d9d9d9")
        self.reset_city_choice.configure(disabledforeground="#a3a3a3")
        self.reset_city_choice.configure(foreground="#000000")
        self.reset_city_choice.configure(highlightbackground="#d9d9d9")
        self.reset_city_choice.configure(highlightcolor="black")
        self.reset_city_choice.configure(pady="0")
        self.reset_city_choice.configure(text='Reset' + "\n" + 'city choice')
        self.reset_city_choice.bind('<Button-1>', lambda e: gui_support.reset_city())

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.1, rely=0.85, height=51, width=224)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font=font11)
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Query Result''')

        self.string_var_query = tk.StringVar()
        self.string_var_query.set("Select a query number")
        self.Listbox3 = tk.OptionMenu(top, self.string_var_query, *["Select a query number"])
        self.Listbox3.place(relx=0.4, rely=0.885, relheight=0.05, relwidth=0.35)
        self.Listbox3.configure(background="white")
        self.Listbox3.configure(disabledforeground="#a3a3a3")
        self.Listbox3.configure(font="TkFixedFont")
        self.Listbox3.configure(foreground="#000000")
        self.Listbox3.configure(highlightbackground="#d9d9d9")
        self.Listbox3.configure(highlightcolor="black")
        self.Listbox3.configure(width=10)

        self.query_res_btn = tk.Button(top)
        self.query_res_btn.place(relx=0.77, rely=0.885, height=22, width=80)
        self.query_res_btn.configure(activebackground="#ececec")
        self.query_res_btn.configure(activeforeground="#000000")
        self.query_res_btn.configure(background="#d9d9d9")
        self.query_res_btn.configure(disabledforeground="#a3a3a3")
        self.query_res_btn.configure(foreground="#000000")
        self.query_res_btn.configure(highlightbackground="#d9d9d9")
        self.query_res_btn.configure(highlightcolor="black")
        self.query_res_btn.configure(pady="0")
        self.query_res_btn.configure(text='''Show Result''')
        self.query_res_btn.configure(command=gui_support.show_res)

        self.query_res_save_all = tk.Button(top)
        self.query_res_save_all.place(relx=0.5, rely=0.94, height=22, width=80)
        self.query_res_save_all.configure(activebackground="#ececec")
        self.query_res_save_all.configure(activeforeground="#000000")
        self.query_res_save_all.configure(background="#d9d9d9")
        self.query_res_save_all.configure(disabledforeground="#a3a3a3")
        self.query_res_save_all.configure(foreground="#000000")
        self.query_res_save_all.configure(highlightbackground="#d9d9d9")
        self.query_res_save_all.configure(highlightcolor="black")
        self.query_res_save_all.configure(pady="0")
        self.query_res_save_all.configure(text='''Save all''')
        self.query_res_save_all.configure(command=gui_support.save_all)

if __name__ == '__main__':
    vp_start_gui()





